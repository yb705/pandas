In [30]: a
Out[30]:
          d         a         b         c         e
0  0.289607 -0.030045  1.025320  1.097730 -0.533818
1  1.171039 -0.115246  0.362222 -1.892706  1.319901
2 -1.164828  0.481135 -0.050183 -0.128543  0.567673
In [17]: a['a'].unique()#某一列或某一行的唯一值
Out[17]: array([-0.03004463, -0.11524622,  0.48113486])
In [18]: a.index.unique()#索引的唯一值
Out[18]: Int64Index([0, 1, 2], dtype='int64')
In [19]: b=a.loc[1]
In [20]: b
Out[20]:
d    1.171039
a   -0.115246
b    0.362222
c   -1.892706
e    1.319901
Name: 1, dtype: float64
In [21]: b.value_counts()#计算各个元素出现了多少次
Out[21]:
-1.892706    1
-0.115246    1
 1.171039    1
 1.319901    1
 0.362222    1
Name: 1, dtype: int64
In [24]: c=pd.Series(b.index)
In [25]: c
Out[25]:
0    d
1    a
2    b
3    c
4    e
dtype: object
In [26]: d=c.isin(['a','c'])#属性筛选，返回的是bool值
In [27]: d
Out[27]:
0    False
1     True
2    False
3     True
4    False
dtype: bool
In [29]: c[d]#通过上述向量化属性查找对比的方法，可以进行其他元素的筛选
Out[29]:
1    a
3    c
dtype: object
