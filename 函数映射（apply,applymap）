f=lambda x:x.max()+x.min()
In [97]: e=pd.DataFrame(np.random.randn(3,3),columns=['a','b','c'])
In [98]: e
Out[98]:
          a         b         c
0  0.224573  0.955411 -1.075299
1 -0.240829  0.121475 -0.106924
2  0.671173  1.431744 -0.586015
In [99]: np.abs(e)#逐项求绝对值
Out[99]:
          a         b         c
0  0.224573  0.955411  1.075299
1  0.240829  0.121475  0.106924
2  0.671173  1.431744  0.586015
In [100]: e.apply(f)#方法apply()是引用函数然后逐行或列操作，默认逐列
Out[100]:
a    0.430344
b    1.553219
c   -1.182223
dtype: float64
In [103]: e.apply(f,axis=0)#逐列
Out[103]:
a    0.430344
b    1.553219
c   -1.182223
dtype: float64
In [104]: e.apply(f,axis=1)#逐行
Out[104]:
0   -0.119889
1   -0.119354
2    0.845729
dtype: float64
In [108]: def g(x):
     ...:     return pd.Series([x.max(),x.min()],index=['max','min'])
In [109]: e.apply(g)#apply可以接受带有多个返回值的series
Out[109]:
            a         b         c
max  0.671173  1.431744 -0.106924
min -0.240829  0.121475 -1.075299
In [110]: h=lambda x:x**2
In [111]: e.applymap(h)#逐项操作用applymap
Out[111]:
          a         b         c
0  0.050433  0.912810  1.156269
1  0.057998  0.014756  0.011433
2  0.450473  2.049892  0.343414
